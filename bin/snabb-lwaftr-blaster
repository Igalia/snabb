#!/bin/bash

# Program name
snabb_lwaftr_blaster=$0

usage() {
   echo -e "usage: snabb-lwaftr-blaster --help"
   echo -e "       snabb-lwaftr-blaster --v4-pcap <ipv4.pcap> --v4-pci <pci-addr> --v6-pcap <ipv6.pcap> --v6-pci <pci-addr>"
   echo -e " "
   echo -e "       --v4-pcap <ipv4.pcap>\tPcap file containing IPv4 packets"
   echo -e "       --v4-pci <pci-addr>\tPCI device number for the INET-side NIC"
   echo -e "       --v6-pcap <ipv6.pcap>\tPcap file containing IPv6 packets"
   echo -e "       --v6-pci <pci-addr>\tPCI device number for the B4-side NIC"
}

error() {
   local msg=$1

   usage
   echo "Error: $msg" >&2
   exit 1
}

# No arguments, print out usage
if [ $# -eq 0 ]; then
   usage
   exit 1
fi

# On SIGINT, kill background jobs (free NICs)
trap 'kill $(jobs -p) 2>/dev/null' INT

dir="$(dirname "$0")"
source "$dir/snabb-lwaftr.inc.sh"

# Parse arguments
while [[ $# > 1 ]]; do
   key="$1"
   case $key in
      --v4-pcap)
         v4_pcap="$2"
         shift
      ;;
      --v4-pci)
         v4_pci="$2"
         shift
      ;;
      --v6-pcap)
         v6_pcap="$2"
         shift
      ;;
      --v6-pci)
         v6_pci="$2"
         shift
      ;;
      --kill)
         do_killnic=1
         break;
      ;;
      --help)
         usage
         exit 1
      ;;
   esac
   shift
done

if [ $EUID -ne 0 ]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

if [ -n "$do_killnic" ]; then
   shift
   while [[ $# > 0 ]]; do
      killnic $1
      shift
   done
   exit 0
fi

# Helper variables for default parameters
snabb_src=$(whereis_snabb_src)
snabb_dir=`dirname $snabb_src`
snabb_test=$snabb_dir/tests
snabb_test_data=$snabb_test/apps/lwaftr/benchdata

# Default parameters
if [ -z "$v4_pcap" ]; then
   v4_pcap=$snabb_test_data/ipv4-550.pcap
fi
if [ -z "$v6_pcap" ]; then
   v6_pcap=$snabb_test_data/ipv6-550.pcap
fi
if [ -z "$v4_pci" ]; then
   error "v4-pci not set"
fi
if [ -z "$v6_pci" ]; then
   error "v6-pci not set"
fi

# NIC addresses must start with '0000:'
if [[ ! $v4_pci =~ ^0000:* ]]; then
   v4_pci=0000:$v4_pci
fi
if [[ ! $v6_pci =~ ^0000:* ]]; then
   v6_pci=0000:$v6_pci
fi

# Check parameters are correct
if [ ! -f "$v4_pcap" ]; then
   error "Couldn't find file at '$v4_pcap'"
fi
if [ ! -f "$v6_pcap" ]; then
   error "Couldn't find file at '$v6_pcap'"
fi
if ! nic_exists "$v4_pci"; then
   error "NIC address '$v4_pci' doesn't exist"
fi
if ! nic_exists "$v6_pci"; then
   error "NIC address '$v6_pci' doesn't exist"
fi

$snabb_src/snabb packetblaster replay $v4_pcap $v4_pci & pid1=$!
$snabb_src/snabb packetblaster replay $v6_pcap $v6_pci & pid2=$!
wait $pid1 && wait $pid2
if [ $? -ne 0 ]; then
   kill $(jobs -p) 2>/dev/null
   exit 1
fi
